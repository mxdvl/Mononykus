import { normalize } from "https://deno.land/std@0.177.0/path/mod.ts";
import { format } from "npm:prettier";

const template = (styles: string, hydrate: string, html: string) =>
	`<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Svelte + Deno</title>

    <script type="module">${hydrate}</script>
    <style>${styles}</style>
  </head>
  <body>
    ${html}
  </body>
</html>
`;

const islands = (base = "", version = "3.58.0") =>
	`/** generated by mononykus - do not edit */
/** @type {(target: Element) => Promise<void>} */
const hydrate = async (target) => {
	target.setAttribute("foraging", "started");
	const name = target.getAttribute("name");
	if (!name) return;

	/** @type {unknown} */
	const props = JSON.parse(target.getAttribute("props") ?? "{}");
	const load = performance.now();

	/** @type {import("https://esm.sh/v115/svelte@${version}/internal/index.d.ts").ComponentType} */
	const Component = (await import('${
		normalize(`/${base}/components/`)
	}' + name + '.island.js')).default;
	console.info(\`Loaded \${name} in \${performance.now() - load}ms\`, props);

	const hydrate = performance.now();
	new Component({ target, props, hydrate: true });
	target.setAttribute("foraging", "complete");
	console.info(
		\`Hydrated %c\${name}%c in %c\${performance.now() - hydrate}%cms\`,
		"color: darkslategrey; background: floralwhite; font-weight: bold;",
		"color: inherit",
		"color: hsl(6, 60%, 18%)",
		"color: inherit",
	);
};
document.querySelectorAll("one-claw[name]").forEach(hydrate);`;

export const get_route_html = ({ html, css, base_path }: {
	html: string;
	css: string;
	base_path?: string;
}) => {
	const page = template(css.trim(), islands(base_path), html.trim());

	return format(
		page,
		{
			parser: "html",
			useTabs: true,
			htmlWhitespaceSensitivity: "css",
			bracketSameLine: true,
		},
	);
};
